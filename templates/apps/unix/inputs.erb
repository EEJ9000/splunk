<%
    host = "#{hostname}.es.gwu.edu"
-%>
[script://./bin/vmstat.sh]
host = <%= host %>
disabled = 0

[script://./bin/iostat.sh]
host = <%= host %>
disabled = 0

[script://./bin/ps.sh]
host = <%= host %>
disabled = 1

[script://./bin/top.sh]
host = <%= host %>
disabled = 0

[script://./bin/netstat.sh]
host = <%= host %>
disabled = 0

[script://./bin/protocol.sh]
host = <%= host %>
disabled = 0

[script://./bin/openPorts.sh]
host = <%= host %>
disabled = 0

[script://./bin/time.sh]
host = <%= host %>
disabled = 0

<% if virtual != "zone" then %>
[script://./bin/lsof.sh]
host = <%= host %>
disabled = 0
<% end %>

[script://./bin/df.sh]
host = <%= host %>
disabled = 0

# Shows current user sessions
[script://./bin/who.sh]
host = <%= host %>
disabled = 0

# Lists users who could login (i.e., they are assigned a login shell)
[script://./bin/usersWithLoginPrivs.sh]
host = <%= host %>
disabled = 0

# Shows last login time for users who have ever logged in
[script://./bin/lastlog.sh]
host = <%= host %>
disabled = 0

# Shows stats per link-level Etherner interface (simply, NIC)
[script://./bin/interfaces.sh]
host = <%= host %>
disabled = 0

# Shows stats per CPU (useful for SMP machines)
[script://./bin/cpu.sh]
host = <%= host %>
disabled = 0

# This script reads the auditd logs translated with ausearch
[script://./bin/rlog.sh]
host = <%= host %>
disabled = 0

# Run package management tool collect installed packages
[script://./bin/package.sh]
host = <%= host %>
disabled = 0

[script://./bin/hardware.sh]
host = <%= host %>
disabled = 0

[monitor:///Library/Logs]
disabled = true

[monitor:///var/log]
disabled = true

[monitor:///var/adm]
disabled = true

[monitor:///etc]
disabled = true

### bash history
disabled = true
host = <%= host %>

[monitor:///home/.../.bash_history]
disabled = true
host = <%= host %>



##### Added for ES support
# Note that because the UNIX app uses a single script to retrieve information
# from multiple OS flavors, and is intended to run on Universal Forwarders,
# it is not possible to differentiate between OS flavors by assigning
# different sourcetypes for each OS flavor (e.g. Linux:SSHDConfig), as was
# the practice in the older deployment-apps included with ES. Instead,
# sourcetypes are prefixed with the generic "Unix".

# May require Splunk forwarder to run as root on some platforms.
[script://./bin/openPortsEnhanced.sh]
disabled = true
host = <%= host %>

[script://./bin/passwd.sh]
disabled = true
host = <%= host %>

<% if osfamily == "RedHat" then %>
# Only applicable to Linux
[script://./bin/selinuxChecker.sh]
disabled = 0
host = <%= host %>
<% end %>

# Currently only supports SunOS, Linux, OSX.
# May require Splunk forwarder to run as root on some platforms.
[script://./bin/service.sh]
disabled = 0
host = <%= host %>

# Currently only supports SunOS, Linux, OSX.
# May require Splunk forwarder to run as root on some platforms.
[script://./bin/sshdChecker.sh]
disabled = true
host = <%= host %>

# Currently only supports Linux, OSX.
# May require Splunk forwarder to run as root on some platforms.
[script://./bin/update.sh]
disabled = true
host = <%= host %>

[script://./bin/uptime.sh]
disabled = 0
host = <%= host %>

[script://./bin/version.sh]
disabled = 0
host = <%= host %>

# This script may need to be modified to point to the VSFTPD configuration file.
[script://./bin/vsftpdChecker.sh]
disabled = true
host = <%= host %>
